class Patient:
    def __init__(self, name, age, gender, address, contact_no):
        self.name = name
        self.age = age
        self.gender = gender
        self.address = address
        self.contact_no = contact_no
        self.appointment = ''

    def book_appointment(self, doctor):
        self.appointment = doctor

    def get_patient_details(self):
        return f"Name: {self.name}\nAge: {self.age}\nGender: {self.gender}\nAddress: {self.address}\nContact No: {self.contact_no}\n"

    def get_appointment_details(self):
        if self.appointment:
            return f"Patient: {self.name}\nDoctor: {self.appointment}"
        else:
            return f"{self.name} does not have any appointment."


class Doctor:
    def __init__(self, name, specialization, availability):
        self.name = name
        self.specialization = specialization
        self.availability = availability

    def get_doctor_details(self):
        return f"Name: {self.name}\nSpecialization: {self.specialization}\nAvailability: {self.availability}\n"


def display_menu():
    print("1. Add Patient")
    print("2. Add Doctor")
    print("3. Book Appointment")
    print("4. View Patient Details")
    print("5. View Doctor Details")
    print("6. Exit")


patients = []
doctors = []


def add_patient():
    print("Enter Patient Details:")
    name = input("Name: ")
    age = input("Age: ")
    gender = input("Gender: ")
    address = input("Address: ")
    contact_no = input("Contact No: ")
    patient = Patient(name, age, gender, address, contact_no)
    patients.append(patient)
    print("Patient added successfully!")


def add_doctor():
    print("Enter Doctor Details:")
    name = input("Name: ")
    specialization = input("Specialization: ")
    availability = input("Availability: ")
    doctor = Doctor(name, specialization, availability)
    doctors.append(doctor)
    print("Doctor added successfully!")


def book_appointment():
    print("Enter Patient Details:")
    patient_name = input("Name: ")
    patient = next((patient for patient in patients if patient.name.lower() == patient_name.lower()), None)
    if patient:
        print("Available Doctors:")
        for idx, doctor in enumerate(doctors):
            print(f"{idx+1}. {doctor.name} ({doctor.specialization})")
        doctor_choice = int(input("Select a doctor: "))
        if 1 <= doctor_choice <= len(doctors):
            doctor = doctors[doctor_choice - 1]
            patient.book_appointment(doctor.name)
        else:
            print("Invalid choice!")
    else:
        print("Patient not found!")


def view_patient_details():
    print("Enter Patient Details:")
    patient_name = input("Name: ")
    patient = next((patient for patient in patients if patient.name.lower() == patient_name.lower()), None)
    if patient:
        print(patient.get_patient_details())
        print(patient.get_appointment_details())
    else:
        print("Patient not found!")


def view_doctor_details():
    print("Available Doctors:")
    for doctor in doctors:
        print(doctor.get_doctor_details())


def hospital_management_system():
    display_menu()
    while True:
        choice = int(input("Enter your choice: "))
        if choice == 1:
            add_patient()
        elif choice == 2:
            add_doctor()
        elif choice == 3:
            book_appointment()
        elif choice == 4:
            view_patient_details()
        elif choice == 5:
            view_doctor_details()
        elif choice == 6:
            print("Thank you for using the Hospital Management System!")
            break
        else:
            print("Invalid choice!")


hospital_management_system()
